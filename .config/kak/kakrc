# Highlight any files whose names start with "zsh" as sh
hook global BufCreate (.*/)?\.?zsh.* %{
  set-option buffer filetype sh
}

# Highlight files ending in .conf as ini
# (Will probably be close enough)
hook global BufCreate .*\.conf %{
  set-option buffer filetype ini
}

# ESLint
hook global WinSetOption filetype=javascript %{
  set-option buffer lintcmd "eslint --format %val{config}/eslint-formatter-kakoune/index.js --stdin-filename \"$kak_buffile\" --stdin <"
  lint-enable
  lint
}

# Strip trailing whitespace on save
hook global BufWritePre .*(?<!\.diff)$ %{
  # Use the a register because the default (^) is cleared by <s>
  execute-keys %{"aZ}
  try %{execute-keys %{%s\h+$<ret>d}}
  execute-keys %{"az}
  echo
}

define-command -docstring "import from the system clipboard" clipboard-import %{
  set-register dquote "%sh{pbpaste}"
  echo -markup "{Information}imported system clipboard to register \""
}

define-command -docstring "export to the system clipboard" clipboard-export %{
  nop %sh{ echo "$kak_reg_dquote" | pbcopy }
  echo -markup "{Information}exported register \" to system clipboard"
}

define-command -docstring "open a file using fzf" open %{
  edit "%sh{
    git ls-files -oc --exclude-standard | fzf-tmux -r 80 --reverse
  }"
}
alias global o open

map global normal <a-Y> :clipboard-import<ret>
map global normal <a-y> :clipboard-export<ret>

# Allow indenting from any position in the line, with the correct indentation.
map global insert <tab> '<a-;><a-gt>'
map global insert <backtab> '<a-;><lt>'

set-option global indentwidth 2
set-option global ui_options ncurses_assistant=none
